/* Auto-generated by genmsg_cpp for file /opt/ros/groovy/stacks/ias_common/vision_srvs/srv/clip_polygon.srv */

package ros.pkg.vision_srvs.srv;

import java.nio.ByteBuffer;


public class clip_polygon extends ros.communication.Service<clip_polygon.Request, clip_polygon.Response> {

  public static java.lang.String __s_getDataType() { return "vision_srvs/clip_polygon"; }
  public static java.lang.String __s_getMD5Sum() { return "833de208811dbf84e2b0e6af79d60331"; }

  public java.lang.String getDataType() { return clip_polygon.__s_getDataType(); }
  public java.lang.String getMD5Sum() { return clip_polygon.__s_getMD5Sum(); }

  public clip_polygon.Request createRequest() {
    return new clip_polygon.Request();
  }

  public clip_polygon.Response createResponse() {
    return new clip_polygon.Response();
  }

static public class Request extends ros.communication.Message {
  static public final long UNION = 0;
  static public final long INTERSECTION = 1;

  public long operation;
  public ros.pkg.geometry_msgs.msg.Polygon poly1 = new ros.pkg.geometry_msgs.msg.Polygon();
  public ros.pkg.geometry_msgs.msg.Polygon poly2 = new ros.pkg.geometry_msgs.msg.Polygon();

  public Request() {
  }

  public static java.lang.String __s_getDataType() { return "vision_srvs/clip_polygonRequest"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "90ec19340207537b530d3a37f5d3aaff"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getServerMD5Sum() { return "833de208811dbf84e2b0e6af79d60331"; }
  public java.lang.String getServerMD5Sum() { return __s_getServerMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "uint32 UNION = 0\n" +
"uint32 INTERSECTION = 1\n" +
"uint32 operation\n" +
"geometry_msgs/Polygon poly1\n" +
"geometry_msgs/Polygon poly2\n" +
"\n" +
"================================================================================\n" +
"MSG: geometry_msgs/Polygon\n" +
"#A specification of a polygon where the first and last points are assumed to be connected\n" +
"Point32[] points\n" +
"\n" +
"================================================================================\n" +
"MSG: geometry_msgs/Point32\n" +
"# This contains the position of a point in free space(with 32 bits of precision).\n" +
"# It is recommeded to use Point wherever possible instead of Point32.  \n" +
"# \n" +
"# This recommendation is to promote interoperability.  \n" +
"#\n" +
"# This message is designed to take up less space when sending\n" +
"# lots of points at once, as in the case of a PointCloud.  \n" +
"\n" +
"float32 x\n" +
"float32 y\n" +
"float32 z\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public Request clone() {
    Request c = new Request();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 4; // operation
    __l += poly1.serializationLength();
    __l += poly2.serializationLength();
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    bb.putInt((int)operation);
    poly1.serialize(bb, seq);
    poly2.serialize(bb, seq);
  }

  public void deserialize(ByteBuffer bb) {
    operation = (long)(bb.getInt() & 0xffffffff);
    poly1.deserialize(bb);
    poly2.deserialize(bb);
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof Request))
      return false;
    Request other = (Request) o;
    return
      operation == other.operation &&
      poly1.equals(other.poly1) &&
      poly2.equals(other.poly2) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (int)(this.operation ^ (this.operation >>> 32));
    result = prime * result + (this.poly1 == null ? 0 : this.poly1.hashCode());
    result = prime * result + (this.poly2 == null ? 0 : this.poly2.hashCode());
    return result;
  }
} // class Request

static public class Response extends ros.communication.Message {

  public ros.pkg.geometry_msgs.msg.Polygon poly_clip = new ros.pkg.geometry_msgs.msg.Polygon();

  public Response() {
  }

  public static java.lang.String __s_getDataType() { return "vision_srvs/clip_polygonResponse"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "8ac99714bd719c813589b0f74ded28d5"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getServerMD5Sum() { return "833de208811dbf84e2b0e6af79d60331"; }
  public java.lang.String getServerMD5Sum() { return __s_getServerMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "geometry_msgs/Polygon poly_clip\n" +
"\n" +
"\n" +
"================================================================================\n" +
"MSG: geometry_msgs/Polygon\n" +
"#A specification of a polygon where the first and last points are assumed to be connected\n" +
"Point32[] points\n" +
"\n" +
"================================================================================\n" +
"MSG: geometry_msgs/Point32\n" +
"# This contains the position of a point in free space(with 32 bits of precision).\n" +
"# It is recommeded to use Point wherever possible instead of Point32.  \n" +
"# \n" +
"# This recommendation is to promote interoperability.  \n" +
"#\n" +
"# This message is designed to take up less space when sending\n" +
"# lots of points at once, as in the case of a PointCloud.  \n" +
"\n" +
"float32 x\n" +
"float32 y\n" +
"float32 z\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public Response clone() {
    Response c = new Response();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += poly_clip.serializationLength();
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    poly_clip.serialize(bb, seq);
  }

  public void deserialize(ByteBuffer bb) {
    poly_clip.deserialize(bb);
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof Response))
      return false;
    Response other = (Response) o;
    return
      poly_clip.equals(other.poly_clip) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.poly_clip == null ? 0 : this.poly_clip.hashCode());
    return result;
  }
} // class Response

} //class

