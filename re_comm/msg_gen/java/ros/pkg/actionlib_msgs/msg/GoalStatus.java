/* Auto-generated by genmsg_java.py for file /opt/ros/groovy/share/actionlib_msgs/msg/GoalStatus.msg */

package ros.pkg.actionlib_msgs.msg;

import java.nio.ByteBuffer;

public class GoalStatus extends ros.communication.Message {
  static public final short PENDING = 0;
  static public final short ACTIVE = 1;
  static public final short PREEMPTED = 2;
  static public final short SUCCEEDED = 3;
  static public final short ABORTED = 4;
  static public final short REJECTED = 5;
  static public final short PREEMPTING = 6;
  static public final short RECALLING = 7;
  static public final short RECALLED = 8;
  static public final short LOST = 9;

  public ros.pkg.actionlib_msgs.msg.GoalID goal_id = new ros.pkg.actionlib_msgs.msg.GoalID();
  public short status;
  public java.lang.String text = new java.lang.String();

  public GoalStatus() {
  }

  public static java.lang.String __s_getDataType() { return "actionlib_msgs/GoalStatus"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "d388f9b87b3c471f784434d671988d4a"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "GoalID goal_id\n" +
"uint8 status\n" +
"uint8 PENDING         = 0   # The goal has yet to be processed by the action server\n" +
"uint8 ACTIVE          = 1   # The goal is currently being processed by the action server\n" +
"uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing\n" +
"                            #   and has since completed its execution (Terminal State)\n" +
"uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)\n" +
"uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due\n" +
"                            #    to some failure (Terminal State)\n" +
"uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,\n" +
"                            #    because the goal was unattainable or invalid (Terminal State)\n" +
"uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing\n" +
"                            #    and has not yet completed execution\n" +
"uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,\n" +
"                            #    but the action server has not yet confirmed that the goal is canceled\n" +
"uint8 RECALLED        = 8   # The goal received a cancel request before it started executing\n" +
"                            #    and was successfully cancelled (Terminal State)\n" +
"uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be\n" +
"                            #    sent over the wire by an action server\n" +
"\n" +
"#Allow for the user to associate a string with GoalStatus for debugging\n" +
"string text\n" +
"\n" +
"\n" +
"================================================================================\n" +
"MSG: actionlib_msgs/GoalID\n" +
"# The stamp should store the time at which this goal was requested.\n" +
"# It is used by an action server when it tries to preempt all\n" +
"# goals that were requested before a certain time\n" +
"time stamp\n" +
"\n" +
"# The id provides a way to associate feedback and\n" +
"# result message with specific goal requests. The id\n" +
"# specified must be unique.\n" +
"string id\n" +
"\n" +
"\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public GoalStatus clone() {
    GoalStatus c = new GoalStatus();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += goal_id.serializationLength();
    __l += 1; // status
    __l += 4 + text.length();
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    goal_id.serialize(bb, seq);
    bb.put((byte)status);
    Serialization.writeString(bb, text);
  }

  public void deserialize(ByteBuffer bb) {
    goal_id.deserialize(bb);
    status = (short)(bb.get() & 0xff);
    text = Serialization.readString(bb);
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof GoalStatus))
      return false;
    GoalStatus other = (GoalStatus) o;
    return
      goal_id.equals(other.goal_id) &&
      status == other.status &&
      text.equals(other.text) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.goal_id == null ? 0 : this.goal_id.hashCode());
    result = prime * result + this.status;
    result = prime * result + (this.text == null ? 0 : this.text.hashCode());
    return result;
  }
} // class GoalStatus

