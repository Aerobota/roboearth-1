/* Auto-generated by genmsg_java.py for file /opt/ros/groovy/stacks/arm_navigation/arm_navigation_msgs/msg/AllowedCollisionEntry.msg */

package ros.pkg.arm_navigation_msgs.msg;

import java.nio.ByteBuffer;

public class AllowedCollisionEntry extends ros.communication.Message {

  public boolean[] enabled = new boolean[0];

  public AllowedCollisionEntry() {
  }

  public static java.lang.String __s_getDataType() { return "arm_navigation_msgs/AllowedCollisionEntry"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "90d1ae1850840724bb043562fe3285fc"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "# whether or not collision checking is enabled\n" +
"bool[] enabled\n" +
"\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public AllowedCollisionEntry clone() {
    AllowedCollisionEntry c = new AllowedCollisionEntry();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 4 + enabled.length * 1; // enabled
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    bb.putInt(enabled.length);
    for(boolean val : enabled) {
      bb.put((byte)(val ? 1 : 0));
    }
  }

  public void deserialize(ByteBuffer bb) {

    int __enabled_len = bb.getInt();
    enabled = new boolean[__enabled_len];
    for(int __i=0; __i<__enabled_len; __i++) {
      enabled[__i] = bb.get() != 0 ? true : false;
    }
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof AllowedCollisionEntry))
      return false;
    AllowedCollisionEntry other = (AllowedCollisionEntry) o;
    return
      java.util.Arrays.equals(enabled, other.enabled) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + java.util.Arrays.hashCode(this.enabled);
    return result;
  }
} // class AllowedCollisionEntry

