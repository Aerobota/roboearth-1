/* Auto-generated by genmsg_java.py for file /opt/ros/groovy/stacks/arm_navigation/arm_navigation_msgs/msg/OrientedBoundingBox.msg */

package ros.pkg.arm_navigation_msgs.msg;

import java.nio.ByteBuffer;

public class OrientedBoundingBox extends ros.communication.Message {

  public ros.pkg.geometry_msgs.msg.Point32 center = new ros.pkg.geometry_msgs.msg.Point32();
  public ros.pkg.geometry_msgs.msg.Point32 extents = new ros.pkg.geometry_msgs.msg.Point32();
  public ros.pkg.geometry_msgs.msg.Point32 axis = new ros.pkg.geometry_msgs.msg.Point32();
  public float angle;

  public OrientedBoundingBox() {
  }

  public static java.lang.String __s_getDataType() { return "arm_navigation_msgs/OrientedBoundingBox"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "a9b13162620bd04a7cb84cf207e7a8ac"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "#the center of the box\n" +
"geometry_msgs/Point32 center\n" +
"\n" +
"#the extents of the box, assuming the center is at the point\n" +
"geometry_msgs/Point32 extents\n" +
"\n" +
"#the axis of the box\n" +
"geometry_msgs/Point32 axis\n" +
"\n" +
"#the angle of rotation around the axis\n" +
"float32 angle\n" +
"\n" +
"================================================================================\n" +
"MSG: geometry_msgs/Point32\n" +
"# This contains the position of a point in free space(with 32 bits of precision).\n" +
"# It is recommeded to use Point wherever possible instead of Point32.  \n" +
"# \n" +
"# This recommendation is to promote interoperability.  \n" +
"#\n" +
"# This message is designed to take up less space when sending\n" +
"# lots of points at once, as in the case of a PointCloud.  \n" +
"\n" +
"float32 x\n" +
"float32 y\n" +
"float32 z\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public OrientedBoundingBox clone() {
    OrientedBoundingBox c = new OrientedBoundingBox();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += center.serializationLength();
    __l += extents.serializationLength();
    __l += axis.serializationLength();
    __l += 4; // angle
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    center.serialize(bb, seq);
    extents.serialize(bb, seq);
    axis.serialize(bb, seq);
    bb.putFloat(angle);
  }

  public void deserialize(ByteBuffer bb) {
    center.deserialize(bb);
    extents.deserialize(bb);
    axis.deserialize(bb);
    angle = bb.getFloat();
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof OrientedBoundingBox))
      return false;
    OrientedBoundingBox other = (OrientedBoundingBox) o;
    return
      center.equals(other.center) &&
      extents.equals(other.extents) &&
      axis.equals(other.axis) &&
      angle == other.angle &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.center == null ? 0 : this.center.hashCode());
    result = prime * result + (this.extents == null ? 0 : this.extents.hashCode());
    result = prime * result + (this.axis == null ? 0 : this.axis.hashCode());
    result = prime * result + Float.floatToIntBits(this.angle);
    return result;
  }
} // class OrientedBoundingBox

