/* Auto-generated by genmsg_java.py for file /opt/ros/groovy/stacks/arm_navigation/arm_navigation_msgs/msg/MakeStaticCollisionMapGoal.msg */

package ros.pkg.arm_navigation_msgs.msg;

import java.nio.ByteBuffer;

public class MakeStaticCollisionMapGoal extends ros.communication.Message {

  public java.lang.String cloud_source = new java.lang.String();
  public int number_of_clouds;

  public MakeStaticCollisionMapGoal() {
  }

  public static java.lang.String __s_getDataType() { return "arm_navigation_msgs/MakeStaticCollisionMapGoal"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "43564281ea7e3c1ca0f01095edc909f7"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n" +
"#The source to use to make the stable map\n" +
"string cloud_source\n" +
"\n" +
"#The number of clouds to compose the stable map\n" +
"int32 number_of_clouds\n" +
"\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public MakeStaticCollisionMapGoal clone() {
    MakeStaticCollisionMapGoal c = new MakeStaticCollisionMapGoal();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 4 + cloud_source.length();
    __l += 4; // number_of_clouds
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    Serialization.writeString(bb, cloud_source);
    bb.putInt(number_of_clouds);
  }

  public void deserialize(ByteBuffer bb) {
    cloud_source = Serialization.readString(bb);
    number_of_clouds = bb.getInt();
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof MakeStaticCollisionMapGoal))
      return false;
    MakeStaticCollisionMapGoal other = (MakeStaticCollisionMapGoal) o;
    return
      cloud_source.equals(other.cloud_source) &&
      number_of_clouds == other.number_of_clouds &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.cloud_source == null ? 0 : this.cloud_source.hashCode());
    result = prime * result + this.number_of_clouds;
    return result;
  }
} // class MakeStaticCollisionMapGoal

