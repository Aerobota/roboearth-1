/* Auto-generated by genmsg_java.py for file /opt/ros/groovy/stacks/arm_navigation/arm_navigation_msgs/msg/ArmNavigationErrorCodes.msg */

package ros.pkg.arm_navigation_msgs.msg;

import java.nio.ByteBuffer;

public class ArmNavigationErrorCodes extends ros.communication.Message {
  static public final int PLANNING_FAILED = -1;
  static public final int SUCCESS = 1;
  static public final int TIMED_OUT = -2;
  static public final int START_STATE_IN_COLLISION = -3;
  static public final int START_STATE_VIOLATES_PATH_CONSTRAINTS = -4;
  static public final int GOAL_IN_COLLISION = -5;
  static public final int GOAL_VIOLATES_PATH_CONSTRAINTS = -6;
  static public final int INVALID_ROBOT_STATE = -7;
  static public final int INCOMPLETE_ROBOT_STATE = -8;
  static public final int INVALID_PLANNER_ID = -9;
  static public final int INVALID_NUM_PLANNING_ATTEMPTS = -10;
  static public final int INVALID_ALLOWED_PLANNING_TIME = -11;
  static public final int INVALID_GROUP_NAME = -12;
  static public final int INVALID_GOAL_JOINT_CONSTRAINTS = -13;
  static public final int INVALID_GOAL_POSITION_CONSTRAINTS = -14;
  static public final int INVALID_GOAL_ORIENTATION_CONSTRAINTS = -15;
  static public final int INVALID_PATH_JOINT_CONSTRAINTS = -16;
  static public final int INVALID_PATH_POSITION_CONSTRAINTS = -17;
  static public final int INVALID_PATH_ORIENTATION_CONSTRAINTS = -18;
  static public final int INVALID_TRAJECTORY = -19;
  static public final int INVALID_INDEX = -20;
  static public final int JOINT_LIMITS_VIOLATED = -21;
  static public final int PATH_CONSTRAINTS_VIOLATED = -22;
  static public final int COLLISION_CONSTRAINTS_VIOLATED = -23;
  static public final int GOAL_CONSTRAINTS_VIOLATED = -24;
  static public final int JOINTS_NOT_MOVING = -25;
  static public final int TRAJECTORY_CONTROLLER_FAILED = -26;
  static public final int FRAME_TRANSFORM_FAILURE = -27;
  static public final int COLLISION_CHECKING_UNAVAILABLE = -28;
  static public final int ROBOT_STATE_STALE = -29;
  static public final int SENSOR_INFO_STALE = -30;
  static public final int NO_IK_SOLUTION = -31;
  static public final int INVALID_LINK_NAME = -32;
  static public final int IK_LINK_IN_COLLISION = -33;
  static public final int NO_FK_SOLUTION = -34;
  static public final int KINEMATICS_STATE_IN_COLLISION = -35;
  static public final int INVALID_TIMEOUT = -36;

  public int val;

  public ArmNavigationErrorCodes() {
  }

  public static java.lang.String __s_getDataType() { return "arm_navigation_msgs/ArmNavigationErrorCodes"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "5acf26755415e1ec18a6d523028f204d"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "int32 val\n" +
"\n" +
"# overall behavior\n" +
"int32 PLANNING_FAILED=-1\n" +
"int32 SUCCESS=1\n" +
"int32 TIMED_OUT=-2\n" +
"\n" +
"# start state errors\n" +
"int32 START_STATE_IN_COLLISION=-3\n" +
"int32 START_STATE_VIOLATES_PATH_CONSTRAINTS=-4\n" +
"\n" +
"# goal errors\n" +
"int32 GOAL_IN_COLLISION=-5\n" +
"int32 GOAL_VIOLATES_PATH_CONSTRAINTS=-6\n" +
"\n" +
"# robot state\n" +
"int32 INVALID_ROBOT_STATE=-7\n" +
"int32 INCOMPLETE_ROBOT_STATE=-8\n" +
"\n" +
"# planning request errors\n" +
"int32 INVALID_PLANNER_ID=-9\n" +
"int32 INVALID_NUM_PLANNING_ATTEMPTS=-10\n" +
"int32 INVALID_ALLOWED_PLANNING_TIME=-11\n" +
"int32 INVALID_GROUP_NAME=-12\n" +
"int32 INVALID_GOAL_JOINT_CONSTRAINTS=-13\n" +
"int32 INVALID_GOAL_POSITION_CONSTRAINTS=-14\n" +
"int32 INVALID_GOAL_ORIENTATION_CONSTRAINTS=-15\n" +
"int32 INVALID_PATH_JOINT_CONSTRAINTS=-16\n" +
"int32 INVALID_PATH_POSITION_CONSTRAINTS=-17\n" +
"int32 INVALID_PATH_ORIENTATION_CONSTRAINTS=-18\n" +
"\n" +
"# state/trajectory monitor errors\n" +
"int32 INVALID_TRAJECTORY=-19\n" +
"int32 INVALID_INDEX=-20\n" +
"int32 JOINT_LIMITS_VIOLATED=-21\n" +
"int32 PATH_CONSTRAINTS_VIOLATED=-22\n" +
"int32 COLLISION_CONSTRAINTS_VIOLATED=-23\n" +
"int32 GOAL_CONSTRAINTS_VIOLATED=-24\n" +
"int32 JOINTS_NOT_MOVING=-25\n" +
"int32 TRAJECTORY_CONTROLLER_FAILED=-26\n" +
"\n" +
"# system errors\n" +
"int32 FRAME_TRANSFORM_FAILURE=-27\n" +
"int32 COLLISION_CHECKING_UNAVAILABLE=-28\n" +
"int32 ROBOT_STATE_STALE=-29\n" +
"int32 SENSOR_INFO_STALE=-30\n" +
"\n" +
"# kinematics errors\n" +
"int32 NO_IK_SOLUTION=-31\n" +
"int32 INVALID_LINK_NAME=-32\n" +
"int32 IK_LINK_IN_COLLISION=-33\n" +
"int32 NO_FK_SOLUTION=-34\n" +
"int32 KINEMATICS_STATE_IN_COLLISION=-35\n" +
"\n" +
"# general errors\n" +
"int32 INVALID_TIMEOUT=-36\n" +
"\n" +
"\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public ArmNavigationErrorCodes clone() {
    ArmNavigationErrorCodes c = new ArmNavigationErrorCodes();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 4; // val
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    bb.putInt(val);
  }

  public void deserialize(ByteBuffer bb) {
    val = bb.getInt();
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof ArmNavigationErrorCodes))
      return false;
    ArmNavigationErrorCodes other = (ArmNavigationErrorCodes) o;
    return
      val == other.val &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + this.val;
    return result;
  }
} // class ArmNavigationErrorCodes

