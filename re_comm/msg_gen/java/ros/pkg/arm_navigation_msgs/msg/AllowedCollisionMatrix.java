/* Auto-generated by genmsg_java.py for file /opt/ros/groovy/stacks/arm_navigation/arm_navigation_msgs/msg/AllowedCollisionMatrix.msg */

package ros.pkg.arm_navigation_msgs.msg;

import java.nio.ByteBuffer;

public class AllowedCollisionMatrix extends ros.communication.Message {

  public java.util.ArrayList<java.lang.String> link_names = new java.util.ArrayList<java.lang.String>();
  public java.util.ArrayList<ros.pkg.arm_navigation_msgs.msg.AllowedCollisionEntry> entries = new java.util.ArrayList<ros.pkg.arm_navigation_msgs.msg.AllowedCollisionEntry>();

  public AllowedCollisionMatrix() {
  }

  public static java.lang.String __s_getDataType() { return "arm_navigation_msgs/AllowedCollisionMatrix"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "c5785d58d2d0b6270738f65222dbec5d"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "# the list of link names in the matrix\n" +
"string[] link_names\n" +
"\n" +
"# the individual entries in the allowed collision matrix\n" +
"# symmetric, with same order as link_names\n" +
"AllowedCollisionEntry[] entries\n" +
"\n" +
"================================================================================\n" +
"MSG: arm_navigation_msgs/AllowedCollisionEntry\n" +
"# whether or not collision checking is enabled\n" +
"bool[] enabled\n" +
"\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public AllowedCollisionMatrix clone() {
    AllowedCollisionMatrix c = new AllowedCollisionMatrix();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 4;
    for(java.lang.String val : link_names) {
      __l += 4 + val.length();
    }
    __l += 4;
    for(ros.pkg.arm_navigation_msgs.msg.AllowedCollisionEntry val : entries) {
      __l += val.serializationLength();
    }
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    bb.putInt(link_names.size());
    for(java.lang.String val : link_names) {
      Serialization.writeString(bb, val);
    }
    bb.putInt(entries.size());
    for(ros.pkg.arm_navigation_msgs.msg.AllowedCollisionEntry val : entries) {
      val.serialize(bb, seq);
    }
  }

  public void deserialize(ByteBuffer bb) {

    int __link_names_len = bb.getInt();
    link_names = new java.util.ArrayList<java.lang.String>(__link_names_len);
    for(int __i=0; __i<__link_names_len; __i++) {
      link_names.add(Serialization.readString(bb));
    }

    int __entries_len = bb.getInt();
    entries = new java.util.ArrayList<ros.pkg.arm_navigation_msgs.msg.AllowedCollisionEntry>(__entries_len);
    for(int __i=0; __i<__entries_len; __i++) {
      ros.pkg.arm_navigation_msgs.msg.AllowedCollisionEntry __tmp = new ros.pkg.arm_navigation_msgs.msg.AllowedCollisionEntry();
      __tmp.deserialize(bb);
      entries.add(__tmp);;
    }
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof AllowedCollisionMatrix))
      return false;
    AllowedCollisionMatrix other = (AllowedCollisionMatrix) o;
    return
      link_names.equals(other.link_names) &&
      entries.equals(other.entries) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.link_names == null ? 0 : this.link_names.hashCode());
    result = prime * result + (this.entries == null ? 0 : this.entries.hashCode());
    return result;
  }
} // class AllowedCollisionMatrix

