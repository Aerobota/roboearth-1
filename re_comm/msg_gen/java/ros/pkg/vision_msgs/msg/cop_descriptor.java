/* Auto-generated by genmsg_java.py for file /opt/ros/groovy/stacks/ias_common/vision_msgs/msg/cop_descriptor.msg */

package ros.pkg.vision_msgs.msg;

import java.nio.ByteBuffer;

public class cop_descriptor extends ros.communication.Message {

  public long object_id;
  public java.lang.String sem_class = new java.lang.String();
  public java.lang.String type = new java.lang.String();
  public double quality;

  public cop_descriptor() {
  }

  public static java.lang.String __s_getDataType() { return "vision_msgs/cop_descriptor"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "da820395d349a763f46d0925861440b9"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "#Descriptors of models used in cop, U. Klank klank@in.tum.de\n" +
"uint64  object_id          # unique id that could be used for a query\n" +
"string  sem_class          # connected semantic concept\n" +
"string  type               # Class name that was used to generate the corresponding cop descriptor plugin, \n" +
"                           # example are: ShapeModel, ColorClass, DeformShapeModel\n" +
"float64 quality            # the current quality assinged to this descriptor\n" +
"\n" +
"\n" +
"\n" +
"\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public cop_descriptor clone() {
    cop_descriptor c = new cop_descriptor();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 8; // object_id
    __l += 4 + sem_class.length();
    __l += 4 + type.length();
    __l += 8; // quality
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    bb.putLong(object_id);
    Serialization.writeString(bb, sem_class);
    Serialization.writeString(bb, type);
    bb.putDouble(quality);
  }

  public void deserialize(ByteBuffer bb) {
    object_id = bb.getLong();
    sem_class = Serialization.readString(bb);
    type = Serialization.readString(bb);
    quality = bb.getDouble();
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof cop_descriptor))
      return false;
    cop_descriptor other = (cop_descriptor) o;
    return
      object_id == other.object_id &&
      sem_class.equals(other.sem_class) &&
      type.equals(other.type) &&
      quality == other.quality &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (int)(this.object_id ^ (this.object_id >>> 32));
    result = prime * result + (this.sem_class == null ? 0 : this.sem_class.hashCode());
    result = prime * result + (this.type == null ? 0 : this.type.hashCode());
    result = prime * result + (int)((tmp = Double.doubleToLongBits(this.quality)) ^ (tmp >>> 32));
    return result;
  }
} // class cop_descriptor

