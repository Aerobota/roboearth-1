/* Auto-generated by genmsg_java.py for file /opt/ros/groovy/stacks/ias_common/vision_msgs/msg/cop_answer.msg */

package ros.pkg.vision_msgs.msg;

import java.nio.ByteBuffer;

public class cop_answer extends ros.communication.Message {

  public long perception_primitive;
  public java.lang.String error = new java.lang.String();
  public java.util.ArrayList<ros.pkg.vision_msgs.msg.aposteriori_position> found_poses = new java.util.ArrayList<ros.pkg.vision_msgs.msg.aposteriori_position>();

  public cop_answer() {
  }

  public static java.lang.String __s_getDataType() { return "vision_msgs/cop_answer"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "1f3f6145b8086e5dd7885136dd895de4"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "#Message that cop uses to  answer on specified topics, U. Klank klank@in.tum.de\n" +
"uint64 perception_primitive         # Perception primitive that caused this answer\n" +
"string error                        # eventuelly there are errors like no object found\n" +
"aposteriori_position[] found_poses  # list od found pose candidate for a certain query\n" +
"\n" +
"================================================================================\n" +
"MSG: vision_msgs/aposteriori_position\n" +
"#objects a posteriori position, U. Klank klank@in.tum.de\n" +
"uint64 objectId                  #id of an cop object\n" +
"float64 probability              #approximated a posteriori probability of the object beeing at the position\n" +
"uint64 position                  #lo id of an position\n" +
"cop_descriptor[] models           #list of all models assigned to the returned object\n" +
"================================================================================\n" +
"MSG: vision_msgs/cop_descriptor\n" +
"#Descriptors of models used in cop, U. Klank klank@in.tum.de\n" +
"uint64  object_id          # unique id that could be used for a query\n" +
"string  sem_class          # connected semantic concept\n" +
"string  type               # Class name that was used to generate the corresponding cop descriptor plugin, \n" +
"                           # example are: ShapeModel, ColorClass, DeformShapeModel\n" +
"float64 quality            # the current quality assinged to this descriptor\n" +
"\n" +
"\n" +
"\n" +
"\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public cop_answer clone() {
    cop_answer c = new cop_answer();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 8; // perception_primitive
    __l += 4 + error.length();
    __l += 4;
    for(ros.pkg.vision_msgs.msg.aposteriori_position val : found_poses) {
      __l += val.serializationLength();
    }
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    bb.putLong(perception_primitive);
    Serialization.writeString(bb, error);
    bb.putInt(found_poses.size());
    for(ros.pkg.vision_msgs.msg.aposteriori_position val : found_poses) {
      val.serialize(bb, seq);
    }
  }

  public void deserialize(ByteBuffer bb) {
    perception_primitive = bb.getLong();
    error = Serialization.readString(bb);

    int __found_poses_len = bb.getInt();
    found_poses = new java.util.ArrayList<ros.pkg.vision_msgs.msg.aposteriori_position>(__found_poses_len);
    for(int __i=0; __i<__found_poses_len; __i++) {
      ros.pkg.vision_msgs.msg.aposteriori_position __tmp = new ros.pkg.vision_msgs.msg.aposteriori_position();
      __tmp.deserialize(bb);
      found_poses.add(__tmp);;
    }
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof cop_answer))
      return false;
    cop_answer other = (cop_answer) o;
    return
      perception_primitive == other.perception_primitive &&
      error.equals(other.error) &&
      found_poses.equals(other.found_poses) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (int)(this.perception_primitive ^ (this.perception_primitive >>> 32));
    result = prime * result + (this.error == null ? 0 : this.error.hashCode());
    result = prime * result + (this.found_poses == null ? 0 : this.found_poses.hashCode());
    return result;
  }
} // class cop_answer

