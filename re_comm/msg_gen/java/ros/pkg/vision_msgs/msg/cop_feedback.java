/* Auto-generated by genmsg_java.py for file /opt/ros/groovy/stacks/ias_common/vision_msgs/msg/cop_feedback.msg */

package ros.pkg.vision_msgs.msg;

import java.nio.ByteBuffer;

public class cop_feedback extends ros.communication.Message {

  public long perception_primitive;
  public double evaluation;
  public java.util.ArrayList<ros.pkg.vision_msgs.msg.system_error> error = new java.util.ArrayList<ros.pkg.vision_msgs.msg.system_error>();
  public long[] eval_whitelist = new long[0];

  public cop_feedback() {
  }

  public static java.lang.String __s_getDataType() { return "vision_msgs/cop_feedback"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "e876bab42e04aea08a659bc18c7b47cc"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "#Message that cop uses to  answer on specified topics, U. Klank klank@in.tum.de\n" +
"uint64         perception_primitive         # Perception primitive that caused this answer\n" +
"float64        evaluation                   # A score describing the quality of the outcomes of the perception primitive\n" +
"system_error[] error                        # A list of occured system failures which might be caused by the perception primitive\n" +
"uint64[]       eval_whitelist               # list results which are included into the evaluation (note: default is all, not none, so an empty list means that all elements have to be evaluated, since the case that none of the results should get an evaluation does not make much sense)\n" +
"\n" +
"================================================================================\n" +
"MSG: vision_msgs/system_error\n" +
"uint64 MANIPULATION_POSE_UNREACHABLE = 64\n" +
"uint64 GRASP_FAILED = 128  # Grasp into the void\n" +
"uint64 OBJECT_NOT_FOUND = 256\n" +
"uint64 VISION_PRIMITIVE_FAILED = 512\n" +
"uint64 CONTRADICTING_TACTILE_FEEDBACK = 1024  # Collide without expecting it\n" +
"uint64 CONTRADICTING_VISION_RESULTS = 2048\n" +
"uint64 GRASP_FAILED_AND_CRASHED = 4096  # Throwing something out of the way\n" +
"uint64 JLO_ERROR = 8192  # Could not get position\n" +
"uint64 VECTOR_FIELD_CANT_REACH = 16384  # The arm got stuck along the way, did not reach the final grasping pose\n" +
"\n" +
"uint64  error_id                # One of the error constants defined above\n" +
"string  node_name               # The node causing this error\n" +
"string  error_description       # Further information about the error\n" +
"\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public cop_feedback clone() {
    cop_feedback c = new cop_feedback();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 8; // perception_primitive
    __l += 8; // evaluation
    __l += 4;
    for(ros.pkg.vision_msgs.msg.system_error val : error) {
      __l += val.serializationLength();
    }
    __l += 4 + eval_whitelist.length * 8; // eval_whitelist
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    bb.putLong(perception_primitive);
    bb.putDouble(evaluation);
    bb.putInt(error.size());
    for(ros.pkg.vision_msgs.msg.system_error val : error) {
      val.serialize(bb, seq);
    }
    bb.putInt(eval_whitelist.length);
    for(long val : eval_whitelist) {
      bb.putLong(val);
    }
  }

  public void deserialize(ByteBuffer bb) {
    perception_primitive = bb.getLong();
    evaluation = bb.getDouble();

    int __error_len = bb.getInt();
    error = new java.util.ArrayList<ros.pkg.vision_msgs.msg.system_error>(__error_len);
    for(int __i=0; __i<__error_len; __i++) {
      ros.pkg.vision_msgs.msg.system_error __tmp = new ros.pkg.vision_msgs.msg.system_error();
      __tmp.deserialize(bb);
      error.add(__tmp);;
    }

    int __eval_whitelist_len = bb.getInt();
    eval_whitelist = new long[__eval_whitelist_len];
    for(int __i=0; __i<__eval_whitelist_len; __i++) {
      eval_whitelist[__i] = bb.getLong();
    }
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof cop_feedback))
      return false;
    cop_feedback other = (cop_feedback) o;
    return
      perception_primitive == other.perception_primitive &&
      evaluation == other.evaluation &&
      error.equals(other.error) &&
      java.util.Arrays.equals(eval_whitelist, other.eval_whitelist) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (int)(this.perception_primitive ^ (this.perception_primitive >>> 32));
    result = prime * result + (int)((tmp = Double.doubleToLongBits(this.evaluation)) ^ (tmp >>> 32));
    result = prime * result + (this.error == null ? 0 : this.error.hashCode());
    result = prime * result + java.util.Arrays.hashCode(this.eval_whitelist);
    return result;
  }
} // class cop_feedback

