/* Auto-generated by genmsg_java.py for file /home/vitalij/ros/stacks/roboearth/re_msgs/msg/SeenObject.msg */

package ros.pkg.re_msgs.msg;

import java.nio.ByteBuffer;

public class SeenObject extends ros.communication.Message {

  public ros.communication.Time stamp = new ros.communication.Time();
  public java.lang.String name = new java.lang.String();
  public ros.pkg.geometry_msgs.msg.Pose pose = new ros.pkg.geometry_msgs.msg.Pose();

  public SeenObject() {
  }

  public static java.lang.String __s_getDataType() { return "re_msgs/SeenObject"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "9d793db59f53f1c133df1a2136f9483a"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "#This represents a Object\n" +
"time stamp\n" +
"string name\n" +
"geometry_msgs/Pose pose\n" +
"\n" +
"================================================================================\n" +
"MSG: geometry_msgs/Pose\n" +
"# A representation of pose in free space, composed of postion and orientation. \n" +
"Point position\n" +
"Quaternion orientation\n" +
"\n" +
"================================================================================\n" +
"MSG: geometry_msgs/Point\n" +
"# This contains the position of a point in free space\n" +
"float64 x\n" +
"float64 y\n" +
"float64 z\n" +
"\n" +
"================================================================================\n" +
"MSG: geometry_msgs/Quaternion\n" +
"# This represents an orientation in free space in quaternion form.\n" +
"\n" +
"float64 x\n" +
"float64 y\n" +
"float64 z\n" +
"float64 w\n" +
"\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public SeenObject clone() {
    SeenObject c = new SeenObject();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 8; // stamp
    __l += 4 + name.length();
    __l += pose.serializationLength();
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    Serialization.writeTime(bb, stamp);
    Serialization.writeString(bb, name);
    pose.serialize(bb, seq);
  }

  public void deserialize(ByteBuffer bb) {
    stamp = Serialization.readTime(bb);
    name = Serialization.readString(bb);
    pose.deserialize(bb);
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof SeenObject))
      return false;
    SeenObject other = (SeenObject) o;
    return
      stamp.equals(other.stamp) &&
      name.equals(other.name) &&
      pose.equals(other.pose) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.stamp == null ? 0 : this.stamp.hashCode());
    result = prime * result + (this.name == null ? 0 : this.name.hashCode());
    result = prime * result + (this.pose == null ? 0 : this.pose.hashCode());
    return result;
  }
} // class SeenObject

