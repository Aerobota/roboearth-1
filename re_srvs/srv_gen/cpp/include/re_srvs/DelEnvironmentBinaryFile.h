/* Auto-generated by genmsg_cpp for file /home/vitalij/ros/stacks/roboearth/re_srvs/srv/DelEnvironmentBinaryFile.srv */
#ifndef RE_SRVS_SERVICE_DELENVIRONMENTBINARYFILE_H
#define RE_SRVS_SERVICE_DELENVIRONMENTBINARYFILE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace re_srvs
{
template <class ContainerAllocator>
struct DelEnvironmentBinaryFileRequest_ {
  typedef DelEnvironmentBinaryFileRequest_<ContainerAllocator> Type;

  DelEnvironmentBinaryFileRequest_()
  : envUID()
  , filename()
  , apiKey()
  {
  }

  DelEnvironmentBinaryFileRequest_(const ContainerAllocator& _alloc)
  : envUID(_alloc)
  , filename(_alloc)
  , apiKey(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _envUID_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  envUID;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _filename_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  filename;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _apiKey_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  apiKey;


  typedef boost::shared_ptr< ::re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct DelEnvironmentBinaryFileRequest
typedef  ::re_srvs::DelEnvironmentBinaryFileRequest_<std::allocator<void> > DelEnvironmentBinaryFileRequest;

typedef boost::shared_ptr< ::re_srvs::DelEnvironmentBinaryFileRequest> DelEnvironmentBinaryFileRequestPtr;
typedef boost::shared_ptr< ::re_srvs::DelEnvironmentBinaryFileRequest const> DelEnvironmentBinaryFileRequestConstPtr;



template <class ContainerAllocator>
struct DelEnvironmentBinaryFileResponse_ {
  typedef DelEnvironmentBinaryFileResponse_<ContainerAllocator> Type;

  DelEnvironmentBinaryFileResponse_()
  : success(false)
  {
  }

  DelEnvironmentBinaryFileResponse_(const ContainerAllocator& _alloc)
  : success(false)
  {
  }

  typedef uint8_t _success_type;
  uint8_t success;


  typedef boost::shared_ptr< ::re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct DelEnvironmentBinaryFileResponse
typedef  ::re_srvs::DelEnvironmentBinaryFileResponse_<std::allocator<void> > DelEnvironmentBinaryFileResponse;

typedef boost::shared_ptr< ::re_srvs::DelEnvironmentBinaryFileResponse> DelEnvironmentBinaryFileResponsePtr;
typedef boost::shared_ptr< ::re_srvs::DelEnvironmentBinaryFileResponse const> DelEnvironmentBinaryFileResponseConstPtr;


struct DelEnvironmentBinaryFile
{

typedef DelEnvironmentBinaryFileRequest Request;
typedef DelEnvironmentBinaryFileResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct DelEnvironmentBinaryFile
} // namespace re_srvs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1136d00233ab61df686c299299f780cd";
  }

  static const char* value(const  ::re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x1136d00233ab61dfULL;
  static const uint64_t static_value2 = 0x686c299299f780cdULL;
};

template<class ContainerAllocator>
struct DataType< ::re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/DelEnvironmentBinaryFileRequest";
  }

  static const char* value(const  ::re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string envUID\n\
string filename\n\
string apiKey\n\
\n\
\n\
";
  }

  static const char* value(const  ::re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "358e233cde0c8a8bcfea4ce193f8fc15";
  }

  static const char* value(const  ::re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x358e233cde0c8a8bULL;
  static const uint64_t static_value2 = 0xcfea4ce193f8fc15ULL;
};

template<class ContainerAllocator>
struct DataType< ::re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/DelEnvironmentBinaryFileResponse";
  }

  static const char* value(const  ::re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool success\n\
\n\
\n\
";
  }

  static const char* value(const  ::re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.envUID);
    stream.next(m.filename);
    stream.next(m.apiKey);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct DelEnvironmentBinaryFileRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct DelEnvironmentBinaryFileResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<re_srvs::DelEnvironmentBinaryFile> {
  static const char* value() 
  {
    return "92f0f09bf0f8863b94cf28ac651d722e";
  }

  static const char* value(const re_srvs::DelEnvironmentBinaryFile&) { return value(); } 
};

template<>
struct DataType<re_srvs::DelEnvironmentBinaryFile> {
  static const char* value() 
  {
    return "re_srvs/DelEnvironmentBinaryFile";
  }

  static const char* value(const re_srvs::DelEnvironmentBinaryFile&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "92f0f09bf0f8863b94cf28ac651d722e";
  }

  static const char* value(const re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/DelEnvironmentBinaryFile";
  }

  static const char* value(const re_srvs::DelEnvironmentBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "92f0f09bf0f8863b94cf28ac651d722e";
  }

  static const char* value(const re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/DelEnvironmentBinaryFile";
  }

  static const char* value(const re_srvs::DelEnvironmentBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // RE_SRVS_SERVICE_DELENVIRONMENTBINARYFILE_H

