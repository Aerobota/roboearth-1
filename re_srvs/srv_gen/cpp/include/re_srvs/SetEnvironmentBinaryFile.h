/* Auto-generated by genmsg_cpp for file /home/vitalij/ros/stacks/roboearth/re_srvs/srv/SetEnvironmentBinaryFile.srv */
#ifndef RE_SRVS_SERVICE_SETENVIRONMENTBINARYFILE_H
#define RE_SRVS_SERVICE_SETENVIRONMENTBINARYFILE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"

#include "re_msgs/File.h"



namespace re_srvs
{
template <class ContainerAllocator>
struct SetEnvironmentBinaryFileRequest_ {
  typedef SetEnvironmentBinaryFileRequest_<ContainerAllocator> Type;

  SetEnvironmentBinaryFileRequest_()
  : envUID()
  , file()
  , apiKey()
  {
  }

  SetEnvironmentBinaryFileRequest_(const ContainerAllocator& _alloc)
  : envUID(_alloc)
  , file(_alloc)
  , apiKey(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _envUID_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  envUID;

  typedef  ::re_msgs::File_<ContainerAllocator>  _file_type;
   ::re_msgs::File_<ContainerAllocator>  file;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _apiKey_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  apiKey;


  typedef boost::shared_ptr< ::re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetEnvironmentBinaryFileRequest
typedef  ::re_srvs::SetEnvironmentBinaryFileRequest_<std::allocator<void> > SetEnvironmentBinaryFileRequest;

typedef boost::shared_ptr< ::re_srvs::SetEnvironmentBinaryFileRequest> SetEnvironmentBinaryFileRequestPtr;
typedef boost::shared_ptr< ::re_srvs::SetEnvironmentBinaryFileRequest const> SetEnvironmentBinaryFileRequestConstPtr;



template <class ContainerAllocator>
struct SetEnvironmentBinaryFileResponse_ {
  typedef SetEnvironmentBinaryFileResponse_<ContainerAllocator> Type;

  SetEnvironmentBinaryFileResponse_()
  : success(false)
  {
  }

  SetEnvironmentBinaryFileResponse_(const ContainerAllocator& _alloc)
  : success(false)
  {
  }

  typedef uint8_t _success_type;
  uint8_t success;


  typedef boost::shared_ptr< ::re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetEnvironmentBinaryFileResponse
typedef  ::re_srvs::SetEnvironmentBinaryFileResponse_<std::allocator<void> > SetEnvironmentBinaryFileResponse;

typedef boost::shared_ptr< ::re_srvs::SetEnvironmentBinaryFileResponse> SetEnvironmentBinaryFileResponsePtr;
typedef boost::shared_ptr< ::re_srvs::SetEnvironmentBinaryFileResponse const> SetEnvironmentBinaryFileResponseConstPtr;


struct SetEnvironmentBinaryFile
{

typedef SetEnvironmentBinaryFileRequest Request;
typedef SetEnvironmentBinaryFileResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetEnvironmentBinaryFile
} // namespace re_srvs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f3be04e39ad5cb2267dd9ca026f28ef6";
  }

  static const char* value(const  ::re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xf3be04e39ad5cb22ULL;
  static const uint64_t static_value2 = 0x67dd9ca026f28ef6ULL;
};

template<class ContainerAllocator>
struct DataType< ::re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/SetEnvironmentBinaryFileRequest";
  }

  static const char* value(const  ::re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string envUID\n\
re_msgs/File file\n\
string apiKey\n\
\n\
\n\
================================================================================\n\
MSG: re_msgs/File\n\
# This file representation is used to pass binary data to the RoboEarthDB.\n\
# As the endianess isn't stored, only files with a byte order mark (BOM) or\n\
# an implicitly specified endianess should be transferred.\n\
string name   # file name\n\
int8[] data   # binary data \n\
\n\
";
  }

  static const char* value(const  ::re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "358e233cde0c8a8bcfea4ce193f8fc15";
  }

  static const char* value(const  ::re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x358e233cde0c8a8bULL;
  static const uint64_t static_value2 = 0xcfea4ce193f8fc15ULL;
};

template<class ContainerAllocator>
struct DataType< ::re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/SetEnvironmentBinaryFileResponse";
  }

  static const char* value(const  ::re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool success\n\
\n\
\n\
";
  }

  static const char* value(const  ::re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.envUID);
    stream.next(m.file);
    stream.next(m.apiKey);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetEnvironmentBinaryFileRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetEnvironmentBinaryFileResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<re_srvs::SetEnvironmentBinaryFile> {
  static const char* value() 
  {
    return "1d33d3be5d89b549b15726c574bb237d";
  }

  static const char* value(const re_srvs::SetEnvironmentBinaryFile&) { return value(); } 
};

template<>
struct DataType<re_srvs::SetEnvironmentBinaryFile> {
  static const char* value() 
  {
    return "re_srvs/SetEnvironmentBinaryFile";
  }

  static const char* value(const re_srvs::SetEnvironmentBinaryFile&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1d33d3be5d89b549b15726c574bb237d";
  }

  static const char* value(const re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/SetEnvironmentBinaryFile";
  }

  static const char* value(const re_srvs::SetEnvironmentBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1d33d3be5d89b549b15726c574bb237d";
  }

  static const char* value(const re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/SetEnvironmentBinaryFile";
  }

  static const char* value(const re_srvs::SetEnvironmentBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // RE_SRVS_SERVICE_SETENVIRONMENTBINARYFILE_H

