/* Auto-generated by genmsg_cpp for file /home/vitalij/ros/stacks/roboearth/re_srvs/srv/RoboEarthRetrieveCopModel.srv */
#ifndef RE_SRVS_SERVICE_ROBOEARTHRETRIEVECOPMODEL_H
#define RE_SRVS_SERVICE_ROBOEARTHRETRIEVECOPMODEL_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace re_srvs
{
template <class ContainerAllocator>
struct RoboEarthRetrieveCopModelRequest_ {
  typedef RoboEarthRetrieveCopModelRequest_<ContainerAllocator> Type;

  RoboEarthRetrieveCopModelRequest_()
  : object_name()
  {
  }

  RoboEarthRetrieveCopModelRequest_(const ContainerAllocator& _alloc)
  : object_name(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _object_name_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  object_name;


  typedef boost::shared_ptr< ::re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct RoboEarthRetrieveCopModelRequest
typedef  ::re_srvs::RoboEarthRetrieveCopModelRequest_<std::allocator<void> > RoboEarthRetrieveCopModelRequest;

typedef boost::shared_ptr< ::re_srvs::RoboEarthRetrieveCopModelRequest> RoboEarthRetrieveCopModelRequestPtr;
typedef boost::shared_ptr< ::re_srvs::RoboEarthRetrieveCopModelRequest const> RoboEarthRetrieveCopModelRequestConstPtr;



template <class ContainerAllocator>
struct RoboEarthRetrieveCopModelResponse_ {
  typedef RoboEarthRetrieveCopModelResponse_<ContainerAllocator> Type;

  RoboEarthRetrieveCopModelResponse_()
  : success(0)
  , owldata()
  {
  }

  RoboEarthRetrieveCopModelResponse_(const ContainerAllocator& _alloc)
  : success(0)
  , owldata(_alloc)
  {
  }

  typedef int8_t _success_type;
  int8_t success;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _owldata_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  owldata;


  typedef boost::shared_ptr< ::re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct RoboEarthRetrieveCopModelResponse
typedef  ::re_srvs::RoboEarthRetrieveCopModelResponse_<std::allocator<void> > RoboEarthRetrieveCopModelResponse;

typedef boost::shared_ptr< ::re_srvs::RoboEarthRetrieveCopModelResponse> RoboEarthRetrieveCopModelResponsePtr;
typedef boost::shared_ptr< ::re_srvs::RoboEarthRetrieveCopModelResponse const> RoboEarthRetrieveCopModelResponseConstPtr;


struct RoboEarthRetrieveCopModel
{

typedef RoboEarthRetrieveCopModelRequest Request;
typedef RoboEarthRetrieveCopModelResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct RoboEarthRetrieveCopModel
} // namespace re_srvs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2f12226348d323c2e5b2031b3da53f1b";
  }

  static const char* value(const  ::re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x2f12226348d323c2ULL;
  static const uint64_t static_value2 = 0xe5b2031b3da53f1bULL;
};

template<class ContainerAllocator>
struct DataType< ::re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/RoboEarthRetrieveCopModelRequest";
  }

  static const char* value(const  ::re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
string object_name\n\
\n\
";
  }

  static const char* value(const  ::re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "8f273897a5c0449873ad43c65d111f6c";
  }

  static const char* value(const  ::re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x8f273897a5c04498ULL;
  static const uint64_t static_value2 = 0x73ad43c65d111f6cULL;
};

template<class ContainerAllocator>
struct DataType< ::re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/RoboEarthRetrieveCopModelResponse";
  }

  static const char* value(const  ::re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "byte success\n\
string owldata\n\
\n\
\n\
";
  }

  static const char* value(const  ::re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.object_name);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct RoboEarthRetrieveCopModelRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
    stream.next(m.owldata);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct RoboEarthRetrieveCopModelResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<re_srvs::RoboEarthRetrieveCopModel> {
  static const char* value() 
  {
    return "87d2f809d62d013732ccd3863f969fb1";
  }

  static const char* value(const re_srvs::RoboEarthRetrieveCopModel&) { return value(); } 
};

template<>
struct DataType<re_srvs::RoboEarthRetrieveCopModel> {
  static const char* value() 
  {
    return "re_srvs/RoboEarthRetrieveCopModel";
  }

  static const char* value(const re_srvs::RoboEarthRetrieveCopModel&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "87d2f809d62d013732ccd3863f969fb1";
  }

  static const char* value(const re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/RoboEarthRetrieveCopModel";
  }

  static const char* value(const re_srvs::RoboEarthRetrieveCopModelRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "87d2f809d62d013732ccd3863f969fb1";
  }

  static const char* value(const re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/RoboEarthRetrieveCopModel";
  }

  static const char* value(const re_srvs::RoboEarthRetrieveCopModelResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // RE_SRVS_SERVICE_ROBOEARTHRETRIEVECOPMODEL_H

