/* Auto-generated by genmsg_cpp for file /home/vitalij/ros/stacks/roboearth/re_srvs/srv/DelObjectBinaryFile.srv */
#ifndef RE_SRVS_SERVICE_DELOBJECTBINARYFILE_H
#define RE_SRVS_SERVICE_DELOBJECTBINARYFILE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace re_srvs
{
template <class ContainerAllocator>
struct DelObjectBinaryFileRequest_ {
  typedef DelObjectBinaryFileRequest_<ContainerAllocator> Type;

  DelObjectBinaryFileRequest_()
  : objectUID()
  , filename()
  , apiKey()
  {
  }

  DelObjectBinaryFileRequest_(const ContainerAllocator& _alloc)
  : objectUID(_alloc)
  , filename(_alloc)
  , apiKey(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _objectUID_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  objectUID;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _filename_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  filename;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _apiKey_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  apiKey;


  typedef boost::shared_ptr< ::re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct DelObjectBinaryFileRequest
typedef  ::re_srvs::DelObjectBinaryFileRequest_<std::allocator<void> > DelObjectBinaryFileRequest;

typedef boost::shared_ptr< ::re_srvs::DelObjectBinaryFileRequest> DelObjectBinaryFileRequestPtr;
typedef boost::shared_ptr< ::re_srvs::DelObjectBinaryFileRequest const> DelObjectBinaryFileRequestConstPtr;



template <class ContainerAllocator>
struct DelObjectBinaryFileResponse_ {
  typedef DelObjectBinaryFileResponse_<ContainerAllocator> Type;

  DelObjectBinaryFileResponse_()
  : success(false)
  {
  }

  DelObjectBinaryFileResponse_(const ContainerAllocator& _alloc)
  : success(false)
  {
  }

  typedef uint8_t _success_type;
  uint8_t success;


  typedef boost::shared_ptr< ::re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct DelObjectBinaryFileResponse
typedef  ::re_srvs::DelObjectBinaryFileResponse_<std::allocator<void> > DelObjectBinaryFileResponse;

typedef boost::shared_ptr< ::re_srvs::DelObjectBinaryFileResponse> DelObjectBinaryFileResponsePtr;
typedef boost::shared_ptr< ::re_srvs::DelObjectBinaryFileResponse const> DelObjectBinaryFileResponseConstPtr;


struct DelObjectBinaryFile
{

typedef DelObjectBinaryFileRequest Request;
typedef DelObjectBinaryFileResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct DelObjectBinaryFile
} // namespace re_srvs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "516e81b1114d1b673eb9cb6675a7250c";
  }

  static const char* value(const  ::re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x516e81b1114d1b67ULL;
  static const uint64_t static_value2 = 0x3eb9cb6675a7250cULL;
};

template<class ContainerAllocator>
struct DataType< ::re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/DelObjectBinaryFileRequest";
  }

  static const char* value(const  ::re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string objectUID\n\
string filename\n\
string apiKey\n\
\n\
\n\
";
  }

  static const char* value(const  ::re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "358e233cde0c8a8bcfea4ce193f8fc15";
  }

  static const char* value(const  ::re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x358e233cde0c8a8bULL;
  static const uint64_t static_value2 = 0xcfea4ce193f8fc15ULL;
};

template<class ContainerAllocator>
struct DataType< ::re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/DelObjectBinaryFileResponse";
  }

  static const char* value(const  ::re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool success\n\
\n\
\n\
";
  }

  static const char* value(const  ::re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.objectUID);
    stream.next(m.filename);
    stream.next(m.apiKey);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct DelObjectBinaryFileRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct DelObjectBinaryFileResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<re_srvs::DelObjectBinaryFile> {
  static const char* value() 
  {
    return "70eebf4c74c43e8287286de77b805579";
  }

  static const char* value(const re_srvs::DelObjectBinaryFile&) { return value(); } 
};

template<>
struct DataType<re_srvs::DelObjectBinaryFile> {
  static const char* value() 
  {
    return "re_srvs/DelObjectBinaryFile";
  }

  static const char* value(const re_srvs::DelObjectBinaryFile&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "70eebf4c74c43e8287286de77b805579";
  }

  static const char* value(const re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/DelObjectBinaryFile";
  }

  static const char* value(const re_srvs::DelObjectBinaryFileRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "70eebf4c74c43e8287286de77b805579";
  }

  static const char* value(const re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re_srvs/DelObjectBinaryFile";
  }

  static const char* value(const re_srvs::DelObjectBinaryFileResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // RE_SRVS_SERVICE_DELOBJECTBINARYFILE_H

