/* Auto-generated by genmsg_java.py for file /opt/ros/groovy/share/sensor_msgs/msg/LaserEcho.msg */

package ros.pkg.sensor_msgs.msg;

import java.nio.ByteBuffer;

public class LaserEcho extends ros.communication.Message {

  public float[] echoes = new float[0];

  public LaserEcho() {
  }

  public static java.lang.String __s_getDataType() { return "sensor_msgs/LaserEcho"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "8bc5ae449b200fba4d552b4225586696"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "# This message is a submessage of MultiEchoLaserScan and is not intended\n" +
"# to be used separately.\n" +
"\n" +
"float32[] echoes  # Multiple values of ranges or intensities.\n" +
"                  # Each array represents data from the same angle increment.\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public LaserEcho clone() {
    LaserEcho c = new LaserEcho();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 4 + echoes.length * 4; // echoes
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    bb.putInt(echoes.length);
    for(float val : echoes) {
      bb.putFloat(val);
    }
  }

  public void deserialize(ByteBuffer bb) {

    int __echoes_len = bb.getInt();
    echoes = new float[__echoes_len];
    for(int __i=0; __i<__echoes_len; __i++) {
      echoes[__i] = bb.getFloat();
    }
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof LaserEcho))
      return false;
    LaserEcho other = (LaserEcho) o;
    return
      java.util.Arrays.equals(echoes, other.echoes) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + java.util.Arrays.hashCode(this.echoes);
    return result;
  }
} // class LaserEcho

